{"version":3,"sources":["styles/template.scss","components/common/ToolsNavigation/ToolsNavigation.scss","components/common/ToolsNavigation/ToolsNavigation.js","components/common/ToolsNavigation/index.js","components/pages/RequestFriendbot/RequestFriendbot.scss","components/pages/RequestFriendbot/RequestFriendbot.js","containers/pages/RequestFriendbotContainer.js"],"names":["module","exports","details","section","main","noFound","toolsNavigation","ToolsNavigation","_ref","className","network","react_default","a","createElement","classNames","classes","Link","to","PropTypes","string","defaultProps","__webpack_require__","d","__webpack_exports__","common_ToolsNavigation_ToolsNavigation","tools","content","description","quantaAddress","quantaAddressInput","error","RequestFriendbot","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onRequest","_this$state","state","username","PublicKey","fromPublicKeyString","fetch","config","getEnv","API_PATH","method","headers","Content-Type","Accept","body","JSON","stringify","name","toLowerCase","public_key","then","response","status","setState","registered","json","res","msg","includes","message","finally","processing","onChangeQuantaAddress","event","value","target","onChangeUsername","_this$state2","templateClasses","match","params","reactstrap_es","type","onChange","spellCheck","placeholder","color","onClick","disabled","length","hidden","Component","shape","connect","environmentType","header"],"mappings":"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","file":"static/js/17.748e4968.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"details\":\"template_details__QGRDl\",\"section\":\"template_section__2wL88\",\"main\":\"template_main__2drTM\",\"noFound\":\"template_noFound__yenmG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toolsNavigation\":\"ToolsNavigation_toolsNavigation__25gXH\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\n\nimport classes from './ToolsNavigation.scss';\n\nconst ToolsNavigation = ({ className, network }) => (\n\t<div className={classNames(classes.toolsNavigation, className)}>\n\t\t<h2>Tools</h2>\n\t\t<Link to={\"/\" + network + \"/tools/generate_keys\"}>Generate Keys</Link>\n\t\t<Link to={\"/\" + network + \"/tools/deploy_crosschain\"}>Deploy Crosschain Ethereum</Link>\n\t\t<Link to={\"/\" + network + \"/tools/request_friendbot\"}>Request Friendbot</Link>\n\t</div>\n);\n\nconst { string } = PropTypes;\nToolsNavigation.propTypes = {\n\tclassName: string,\n};\n\nToolsNavigation.defaultProps = {\n\tclassName: '',\n};\n\nexport default ToolsNavigation;\n","export { default } from './ToolsNavigation';\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tools\":\"RequestFriendbot_tools__2dJnI\",\"content\":\"RequestFriendbot_content__2TT6F\",\"description\":\"RequestFriendbot_description__KN8qS\",\"quantaAddress\":\"RequestFriendbot_quantaAddress__2WYGg\",\"quantaAddressInput\":\"RequestFriendbot_quantaAddressInput__2dlC7\",\"error\":\"RequestFriendbot_error__2X6oB\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Button, Input } from 'reactstrap';\nimport { PublicKey } from \"@quantadex/bitsharesjs\";\nimport ToolsNavigation from '@quanta/components/common/ToolsNavigation';\nimport templateClasses from '@quanta/styles/template.scss';\nimport classes from './RequestFriendbot.scss';\nimport config from '@quanta/config';\n\nclass RequestFriendbot extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tquantaAddress: '',\n\t\t\tusername: '',\n\t\t\tprocessing: false,\n\t\t};\n\t}\n\tonRequest = () => {\n\t\tconst { username, quantaAddress } = this.state;\n\n\t\tif (!PublicKey.fromPublicKeyString(quantaAddress)) {\n\t\t\tthis.setState({\n\t\t\t\terror: true,\n\t\t\t\tmessage: \"Invalid Address\"\n\t\t\t});\n\t\t\treturn\n\t\t}\n\n\t\tfetch(config.getEnv().API_PATH + \"register_account\", {\n\t\t\tmethod: \"post\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\tAccept: \"application/json\"\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tname: username.toLowerCase(),\n\t\t\t\tpublic_key: quantaAddress,\n\t\t\t})\n\t\t}).then(response => {\n\t\t\tif (response.status == 200) {\n\t\t\t\tthis.setState({ error: false, registered: true })\n\t\t\t\treturn response.json()\n\t\t\t} else {\n\t\t\t\treturn response.json().then(res => {\n\t\t\t\t\tvar msg;\n\t\t\t\t\tif (res.error.includes(\"already exists\")) {\n\t\t\t\t\t\tmsg = \"Username already exist\"\n\t\t\t\t\t} else if (res.error.includes(\"is_valid_name\")) {\n\t\t\t\t\t\tmsg = \"Name must start with a letter and only contains alpha numeric, dash, and dot\"\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmsg = \"Server error. Please try again.\"\n\t\t\t\t\t}\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\terror: true,\n\t\t\t\t\t\tmessage: msg\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t}).finally(() => {\n\t\t\tthis.setState({ processing: false })\n\t\t})\n\t};\n\n\tonChangeQuantaAddress = event => {\n\t\tconst { value } = event.target;\n\n\t\tif (this.state.registered) {\n\t\t\tthis.setState({\n\t\t\t\tregistered: false,\n\t\t\t});\n\t\t}\n\n\t\tthis.setState({\n\t\t\tquantaAddress: value,\n\t\t});\n\t};\n\n\tonChangeUsername = event => {\n\t\tconst { value } = event.target;\n\n\t\tif (this.state.registered) {\n\t\t\tthis.setState({\n\t\t\t\tregistered: false,\n\t\t\t});\n\t\t}\n\n\t\tthis.setState({\n\t\t\tusername: value,\n\t\t});\n\t};\n\n\trender() {\n\t\tconst { username, quantaAddress } = this.state;\n\t\treturn (\n\t\t\t<div className={classNames(templateClasses.main, 'd-flex', classes.tools)}>\n\t\t\t\t<ToolsNavigation className=\"hidden-sm\" network={this.props.match.params.network} />\n\t\t\t\t<div className={classes.content}>\n\t\t\t\t\t<h2>Request Friendbot</h2>\n\t\t\t\t\t<div className={classes.description}>\n\t\t\t\t\t\tActivate your QUANTA account by requesting friendbot for QDEX tokens.\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={classes.quantaAddress}>Username</div>\n\t\t\t\t\t<Input\n\t\t\t\t\t\tclassName={classes.quantaAddressInput}\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tvalue={username}\n\t\t\t\t\t\tonChange={this.onChangeUsername}\n\t\t\t\t\t\tspellCheck=\"false\"\n\t\t\t\t\t\tplaceholder=\"Enter your username\"\n\t\t\t\t\t/>\n\t\t\t\t\t<div className={classes.quantaAddress}>QUANTA Address</div>\n\t\t\t\t\t<Input\n\t\t\t\t\t\tclassName={classes.quantaAddressInput}\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tvalue={quantaAddress}\n\t\t\t\t\t\tonChange={this.onChangeQuantaAddress}\n\t\t\t\t\t\tspellCheck=\"false\"\n\t\t\t\t\t\tplaceholder=\"Example:  QBS4â€¦. 6S3K\"\n\t\t\t\t\t/>\n\t\t\t\t\t<Button color=\"primary\" onClick={this.onRequest} disabled={this.state.processing || this.state.registered || this.state.quantaAddress.length === 0 || this.state.username.length === 0}>\n\t\t\t\t\t\t{this.state.processing ? \"Requesting...\" : this.state.registered ? \"Activated\" : \"Request\"}\n\t\t\t\t\t</Button> <span className={classes.error} hidden={!this.state.error}>{this.state.message}</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst { shape } = PropTypes;\n\nRequestFriendbot.propTypes = {\n\tenvironmentType: shape({}).isRequired,\n};\n\nexport default RequestFriendbot;\n","import { connect } from 'react-redux';\nimport RequestFriendbot from '@quanta/components/pages/RequestFriendbot';\n\nconst mapStateToProps = state => ({\n\tenvironmentType: state.header.environmentType,\n});\n\nexport default connect(mapStateToProps)(RequestFriendbot);\n"],"sourceRoot":""}