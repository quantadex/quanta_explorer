{"version":3,"sources":["helpers/utils.js","styles/tables.scss","components/pages/Ledgers/Ledgers.scss","components/pages/Ledgers/Ledgers.js","containers/pages/LedgersContainer.js"],"names":["timeDiff","fromString","unit","arguments","length","undefined","toString","duration","moment","diff","asMilliseconds","asMinutes","timeAgo","t","adjust","expr","Date","old_date","setFullYear","getFullYear","getTime","toFixed","Math","round","dateToString","dateString","utc","format","localeString","number","precision","toLocaleString","navigator","language","minimumFractionDigits","names","getName","id","Apis","instance","db_api","exec","then","e","name","operationData","_x","_x2","_operationData","apply","this","_callee","op","type","operation","name1","name2","uid","uid2","_Users_quoc_Projects_cryptodex_quanta_explorer_client_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","wrap","_context","prev","next","t0","from","to","abrupt","seller","fee_paying_account","funding_account","account_id","registrar","referrer","account","issuer","issue_to_account","payer","publisher","owner_","deposit_to_account","sent","data","stop","module","exports","table","header","body","footer","prevButton","details","content","item","value","main","history","created","sequence","transactions","operations","description","Ledgers","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getBlockAverageLatency","setAverageBlockLatency","ledgers","state","totalLatency","forEach","ledger","index","closed_at","onNext","_this$props","allLinks","fetchAllLedgers","url","href","onPrev","_this$props2","renderLedgersRecord","react_default","createElement","Fragment","map","key","className","tableClasses","concat","classes","transaction_count","operation_count","toNow","renderLedgerHistory","renderAllLedgers","_this$props3","allLedgers","reactstrap_es","color","classNames","onClick","disabled","size","ledgersSource","EventSource","CONFIG","ENVIRONMENT","HORIZON_SERVER","_this2","_this$props4","fetchLedgers","fetchMetrics","fetchNodeCount","limit","order","addEventListener","message","unshift","JSON","parse","setState","slice","SETTINGS","RECENT_ITEM_LENGTH","nextProps","_this3","sort","b","_this$props5","metrics","averageBlockLatency","nodeCount","Component","PropTypes","func","arrayOf","object","shape","connect","links","global","dispatch","params"],"mappings":"4SAIaA,EAAW,SAACC,GAAqC,IAAzBC,EAAyBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAlB,IAAKG,EAAaH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACvDE,EAAWD,EACdE,IAAOD,SAASC,IAAOF,GAAUG,KAAKD,IAAOP,KAC7CO,IAAOD,SAASC,MAASC,KAAKD,IAAOP,KAExC,OAAQC,GACP,IAAK,KACJ,OAAOK,EAASG,iBACjB,QACC,OAAOH,EAASI,cAIZ,SAASC,EAAQC,GAAe,IAAZC,EAAYX,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAH,EAC7BY,EAAO,IAAIC,KAAKH,EAAI,KACpBI,EAAW,IAAID,KAAKD,EAAKG,YAAYH,EAAKI,cAAgBL,IAE1Dd,KADM,IAAIgB,MACOI,UAAYH,EAASG,WAAa,KAAMC,QAAQ,GACvE,OAAOrB,EAAW,KAAUA,EAAW,WACtCA,EAAW,MAAesB,KAAKC,MAAMvB,EAAW,GAAK,IAAM,SAC1DsB,KAAKC,MAAMvB,EAAW,GAAK,GAAK,IAAM,QAGlC,IAAMwB,EAAe,SAACC,GAC5B,QADyDtB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GAEjDK,IAAOkB,IAAID,GAAYE,OA3BZ,0BA6BXnB,IAAOiB,GAAYE,OA7BR,2BAiCPC,EAAe,SAACC,GAA0B,IAAlBC,EAAkB3B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAN,EAChD,OAAO0B,EAAOE,eAAeC,UAAUC,SAAU,CAAEC,sBAAuBJ,KAGvEK,EAAQ,GAEZ,SAASC,EAAQC,EAAIC,GACpB,YAAkBjC,IAAd8B,EAAME,GACFF,EAAME,GAENC,EAAKC,WAAWC,SAASC,KAAK,eAAgB,CAAC,CAACJ,KAAMK,KAAK,SAAAC,GAEjE,OADAR,EAAME,GAAMM,EAAE,GAAGC,KACVD,EAAE,GAAGC,OAKR,SAAeC,EAAtBC,EAAAC,GAAA,OAAAC,EAAAC,MAAAC,KAAA/C,sDAAO,SAAAgD,EAA6BC,EAAId,GAAjC,IAAAe,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACFX,EAAOD,EAAG,GACVE,EAAYF,EAAG,GAEnBM,GAAO,EAJDI,EAAAG,GAMEZ,EANFS,EAAAE,KAOA,IAPAF,EAAAG,GAAA,EAWA,IAXAH,EAAAG,GAAA,EAcA,IAdAH,EAAAG,GAAA,GAiBA,IAjBAH,EAAAG,GAAA,GAoBA,IApBAH,EAAAG,GAAA,GAuBA,IAvBAH,EAAAG,GAAA,GA2BA,IA3BAH,EAAAG,GAAA,GA8BA,KA9BAH,EAAAG,GAAA,GAkCA,KAlCAH,EAAAG,GAAA,GAqCA,KArCAH,EAAAG,GAAA,GAwCA,KAxCAH,EAAAG,GAAA,GA2CA,KA3CAH,EAAAG,GAAA,GA8CA,KA9CAH,EAAAG,GAAA,GAiDA,KAjDAH,EAAAG,GAAA,GAoDA,KApDAH,EAAAG,GAAA,GAuDA,KAvDAH,EAAAG,GAAA,0BAQJR,EAAMH,EAAUY,KAChBR,EAAOJ,EAAUa,GATbL,EAAAM,OAAA,0BAYJX,EAAMH,EAAUe,OAZZP,EAAAM,OAAA,2BAeJX,EAAMH,EAAUgB,mBAfZR,EAAAM,OAAA,2BAkBJX,EAAMH,EAAUiB,gBAlBZT,EAAAM,OAAA,2BAqBJX,EAAMH,EAAUkB,WArBZV,EAAAM,OAAA,2BAwBJX,EAAMH,EAAUmB,UAChBf,EAAOJ,EAAUoB,SAzBbZ,EAAAM,OAAA,2BA4BJX,EAAMH,EAAUqB,QA5BZb,EAAAM,OAAA,2BA+BJX,EAAMH,EAAUsB,OAChBlB,EAAOJ,EAAUuB,iBAhCbf,EAAAM,OAAA,2BAmCJX,EAAMH,EAAUwB,MAnCZhB,EAAAM,OAAA,2BAsCJX,EAAMH,EAAUyB,UAtCZjB,EAAAM,OAAA,mCA4CJX,EAAMH,EAAUgB,mBA5CZR,EAAAM,OAAA,2BA+CJX,EAAMH,EAAU0B,OA/CZlB,EAAAM,OAAA,2BAkDJX,EAAMH,EAAU2B,mBAlDZnB,EAAAM,OAAA,mCAwDJX,EAAMH,EAAUkB,WAxDZV,EAAAM,OAAA,0BA4DEhB,EA5DF,YA+DFK,EA/DE,CAAAK,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GAgES5B,EAAQqB,EAAKnB,GAhEtB,QAgELiB,EAhEKO,EAAAoB,KAAA,YAkEFxB,EAlEE,CAAAI,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GAmES5B,EAAQsB,EAAMpB,GAnEvB,QAmELkB,EAnEKM,EAAAoB,KAAA,eAAApB,EAAAM,OAAA,SAsEC,CAAEb,MAAOA,EAAOC,MAAOA,EAAOH,KAAMA,EAAM8B,KAAM7B,IAtEjD,yBAAAQ,EAAAsB,SAAAjC,EAAAD,sDCnDPmC,EAAAC,QAAA,CAAkBC,MAAA,sBAAAC,OAAA,uBAAAC,KAAA,qBAAAC,OAAA,uBAAAC,WAAA,iDCAlBN,EAAAC,QAAA,CAAkBM,QAAA,yBAAAC,QAAA,yBAAAC,KAAA,sBAAAC,MAAA,uBAAAC,KAAA,sBAAAC,QAAA,yBAAAC,QAAA,yBAAAC,SAAA,0BAAAC,aAAA,8BAAAC,WAAA,4BAAAC,YAAA,oSCUZC,cACL,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAxD,KAAAqD,IAClBE,EAAAC,OAAAE,EAAA,EAAAF,CAAAxD,KAAAwD,OAAAG,EAAA,EAAAH,CAAAH,GAAAO,KAAA5D,KAAMsD,KA6CPO,uBAAyB,WAAM,IACtBC,EAA2BP,EAAKD,MAAhCQ,uBACAC,EAAYR,EAAKS,MAAjBD,QAEJE,EAAe,EACnBF,EAAQG,QAAQ,SAACC,EAAQC,GACpBA,IAAUL,EAAQ7G,OAAS,IAG/B+G,GAAgBnH,YAASiH,EAAQK,EAAQ,GAAGC,UAAW,KAAMF,EAAOE,cAErEP,EAAuB1F,KAAKC,MAAM4F,GAAgBF,EAAQ7G,OAAS,MAzDjDqG,EA4DnBe,OAAS,WAAM,IAAAC,EACwBhB,EAAKD,MAAnCkB,EADMD,EACNC,UACRC,EAFcF,EACIE,iBACF,CAAEC,IAAKF,EAAS1D,KAAK6D,QA9DnBpB,EAiEnBqB,OAAS,WAAM,IAAAC,EACwBtB,EAAKD,MAAnCkB,EADMK,EACNL,UACRC,EAFcI,EACIJ,iBACF,CAAEC,IAAKF,EAAS3D,KAAK8D,QAnEnBpB,EAsEnBuB,oBAAsB,SAAAf,GACrB,OACCgB,EAAArE,EAAAsE,cAACD,EAAArE,EAAMuE,SAAP,KACElB,EAAQmB,IAAI,SAAAf,GAAM,OAClBY,EAAArE,EAAAsE,cAAA,OAAKG,IAAKhB,EAAOhF,GAAIiG,UAAWC,IAAa9C,MAC5CwC,EAAArE,EAAAsE,cAAA,KAAGL,KAAI,YAAAW,OAAcnB,EAAOlB,UAAYmC,UAAWG,IAAQtC,UACzDkB,EAAOlB,UAET8B,EAAArE,EAAAsE,cAAA,OAAKI,UAAWG,IAAQrC,cAAeiB,EAAOqB,mBAC9CT,EAAArE,EAAAsE,cAAA,OAAKI,UAAWG,IAAQpC,YAAagB,EAAOsB,iBAC5CV,EAAArE,EAAAsE,cAAA,OAAKI,UAAWG,IAAQvC,SAAxB,KAAAsC,OAAuChI,IAAO6G,EAAOE,WAAWqB,OAC/D,GADD,cAhFcnC,EAyFnBoC,oBAAsB,kBACrBZ,EAAArE,EAAAsE,cAAA,OAAKI,UAAU,UACdL,EAAArE,EAAAsE,cAAA,OAAKI,UAAWG,IAAQjD,QACvByC,EAAArE,EAAAsE,cAAA,6BAEDD,EAAArE,EAAAsE,cAAA,OAAKI,UAAWC,IAAahD,OAC5B0C,EAAArE,EAAAsE,cAAA,OAAKI,UAAWC,IAAa/C,QAC5ByC,EAAArE,EAAAsE,cAAA,OAAKI,UAAWG,IAAQtC,UAAxB,YACA8B,EAAArE,EAAAsE,cAAA,OAAKI,UAAWG,IAAQrC,cAAxB,gBACA6B,EAAArE,EAAAsE,cAAA,OAAKI,UAAWG,IAAQpC,YAAxB,cACA4B,EAAArE,EAAAsE,cAAA,OAAKI,UAAWG,IAAQvC,SAAxB,YAEAO,EAAKuB,oBAAoBvB,EAAKS,MAAMD,YArGrBR,EA0GnBqC,iBAAmB,WAAM,IAAAC,EACStC,EAAKD,MAA9BwC,EADgBD,EAChBC,WAAYtB,EADIqB,EACJrB,SACpB,OACCO,EAAArE,EAAAsE,cAAA,OAAKI,UAAWG,IAAQxC,SACvBgC,EAAArE,EAAAsE,cAAA,4BACAD,EAAArE,EAAAsE,cAAA,OAAKI,UAAWC,IAAahD,OAC5B0C,EAAArE,EAAAsE,cAAA,OAAKI,UAAWC,IAAa/C,QAC5ByC,EAAArE,EAAAsE,cAAA,OAAKI,UAAWG,IAAQtC,UAAxB,YACA8B,EAAArE,EAAAsE,cAAA,OAAKI,UAAWG,IAAQrC,cAAxB,gBACA6B,EAAArE,EAAAsE,cAAA,OAAKI,UAAWG,IAAQpC,YAAxB,cACA4B,EAAArE,EAAAsE,cAAA,OAAKI,UAAWG,IAAQvC,SAAxB,YAEAO,EAAKuB,oBAAoBgB,IAE3Bf,EAAArE,EAAAsE,cAAA,OAAKI,UAAWC,IAAa7C,QAC5BuC,EAAArE,EAAAsE,cAACe,EAAA,EAAD,CACCC,MAAM,UACNZ,UAAWa,IAAWZ,IAAa5C,WAAY,aAC/CyD,QAAS3C,EAAKqB,OACduB,UAAW3B,EAAS3D,MAJrB,QAQAkE,EAAArE,EAAAsE,cAACe,EAAA,EAAD,CACCC,MAAM,UACNZ,UAAWa,IAAWZ,IAAa5C,WAAY,WAC/CyD,QAAS3C,EAAKqB,OACduB,UAAW3B,EAAS3D,KACpBuF,KAAK,MALN,QASArB,EAAArE,EAAAsE,cAACe,EAAA,EAAD,CACCC,MAAM,UACNZ,UAAU,YACVc,QAAS3C,EAAKe,OACd6B,UAAW3B,EAAS1D,MAJrB,QAQAiE,EAAArE,EAAAsE,cAACe,EAAA,EAAD,CACCC,MAAM,UACNZ,UAAU,UACVc,QAAS3C,EAAKe,OACd6B,UAAW3B,EAAS1D,KACpBsF,KAAK,MALN,WA/IH7C,EAAKS,MAAQ,CACZqC,cAAe,IAAIC,YAAJ,GAAAhB,OACXiB,IAAOC,YAAYC,eADR,kCAGf1C,QAAST,EAAMS,SAAW,IAPTR,mFAWC,IAAAmD,EAAA1G,KAAA2G,EACqD3G,KAAKsD,MAArEsD,EADWD,EACXC,aAAcC,EADHF,EACGE,aAAcC,EADjBH,EACiBG,eAAgBrC,EADjCkC,EACiClC,gBACpDmC,IACAnC,EAAgB,CAAEsC,MAAO,GAAIC,MAAO,SACpCF,IACAD,IAEA7G,KAAKgE,MAAMqC,cAAcY,iBAAiB,CAAC,WAAY,SAAAC,GAAW,IACzDnD,EAAY2C,EAAK1C,MAAjBD,QACJ2C,EAAK1C,MAAMD,QAAQ7G,OAAS,IAC/B6G,EAAQoD,QAAQC,KAAKC,MAAMH,EAAQjF,OACnCyE,EAAK7C,yBACLgD,IACAH,EAAKY,SAAS,CACbvD,QAASA,EAAQwD,MAAM,EAAGhB,IAAOiB,SAASC,2EAMpBC,GAAW,IAAAC,EAAA3H,KAChCA,KAAKsD,MAAMS,UAAY2D,EAAU3D,SACpC/D,KAAKsH,SACJ,CACCvD,QAAS2D,EAAU3D,QAAQ6D,KAAK,SAAClH,EAAGmH,GAAJ,OAC/B/K,YAAS4D,EAAE2D,UAAW,KAAMwD,EAAExD,cAGhC,WACCsD,EAAK9D,4DAwHA,IAAAiE,EAC4C9H,KAAKsD,MAAjDyE,EADAD,EACAC,QAASC,EADTF,EACSE,oBAAqBC,EAD9BH,EAC8BG,UACtC,OACClD,EAAArE,EAAAsE,cAACD,EAAArE,EAAMuE,SAAP,KACCF,EAAArE,EAAAsE,cAAA,OAAKI,UAAWG,IAAQ7C,SACvBqC,EAAArE,EAAAsE,cAAA,OAAKI,UAAWG,IAAQ5C,SACvBoC,EAAArE,EAAAsE,cAAA,OAAKI,UAAWG,IAAQ3C,MAAxB,gBAEEmF,EAAQ,0BACRhD,EAAArE,EAAAsE,cAAA,OAAKI,UAAWG,IAAQ1C,OACtBkF,EAAQ,yBAAyBlF,QAIrCkC,EAAArE,EAAAsE,cAAA,OAAKI,UAAWG,IAAQ3C,MAAxB,wBAECmC,EAAArE,EAAAsE,cAAA,OAAKI,UAAWG,IAAQ1C,OAAxB,GAAAyC,OAAmC0C,EAAnC,QAEDjD,EAAArE,EAAAsE,cAAA,OAAKI,UAAWG,IAAQ3C,MAAxB,kBAECmC,EAAArE,EAAAsE,cAAA,OAAKI,UAAWG,IAAQ1C,OAAQoF,MAInClD,EAAArE,EAAAsE,cAAA,OAAKI,UAAWG,IAAQzC,MACtB9C,KAAK4F,mBACL5F,KAAK2F,+BA3LWuC,aAgNP7E,GAdkC8E,IAAzCC,KAAyCD,IAAnCE,QAAmCF,IAA1BG,OAA0BH,IAAlBI,MAAkBJ,IAAXxJ,OAcvB0E,GCzLAmF,sBA3BS,SAAAxE,GAAK,MAAK,CACjCD,QAASC,EAAMD,QAAQA,QACvB+B,WAAY9B,EAAMD,QAAQ+B,WAAW/B,QACrCS,SAAUR,EAAMD,QAAQ+B,WAAW2C,MACnCV,QAAS/D,EAAM+D,QAAQA,QACvBC,oBAAqBhE,EAAM0E,OAAOV,oBAClCC,UAAWjE,EAAM0E,OAAOT,YAGC,SAAAU,GAAQ,MAAK,CACtC/B,aAAc,WACb+B,EAAS/B,YAAa,CAAEG,MAAOS,WAASC,mBAAoBT,MAAO,WAEpEvC,gBAAiB,SAAAmE,GAChBD,EAASlE,YAAgBmE,KAE1B/B,aAAc,WACb8B,EAAS9B,gBAEV/C,uBAAwB,SAAAkE,GACvBW,EAAS7E,YAAuBkE,KAEjClB,eAAgB,WACf6B,EAAS7B,kBAII0B,CAGbnF","file":"static/js/12.dc6bc9c5.chunk.js","sourcesContent":["import moment from 'moment';\n\nconst DATE_FORMAT = 'DD MMM YYYY hh:mm:ss z';\n\nexport const timeDiff = (fromString, unit = 'm', toString) => {\n\tconst duration = toString\n\t\t? moment.duration(moment(toString).diff(moment(fromString)))\n\t\t: moment.duration(moment().diff(moment(fromString)));\n\n\tswitch (unit) {\n\t\tcase 'ms':\n\t\t\treturn duration.asMilliseconds();\n\t\tdefault:\n\t\t\treturn duration.asMinutes();\n\t}\n};\n\nexport function timeAgo(t, adjust = 0) {\n\tconst expr = new Date(t + \"z\");\n\tconst old_date = new Date(expr.setFullYear(expr.getFullYear() - adjust));\n\tconst now = new Date();\n\tconst timeDiff = ((now.getTime() - old_date.getTime()) / 1000).toFixed(0)\n\treturn timeDiff < 60 * 60 ? timeDiff + \" seconds\" :\n\t\ttimeDiff < 60 * 60 * 24 ? Math.round(timeDiff / 60 / 60) + \" hours\" :\n\t\t\tMath.round(timeDiff / 60 / 60 / 24) + \" days\"\n};\n\nexport const dateToString = (dateString, isUTC = true) => {\n\tif (isUTC) {\n\t\treturn moment.utc(dateString).format(DATE_FORMAT);\n\t} else {\n\t\treturn moment(dateString).format(DATE_FORMAT);\n\t}\n};\n\nexport const localeString = (number, precision = 0) => {\n\treturn number.toLocaleString(navigator.language, { minimumFractionDigits: precision })\n};\n\nvar names = {}\n\nfunction getName(id, Apis) {\n\tif (names[id] !== undefined) {\n\t\treturn names[id]\n\t} else {\n\t\treturn Apis.instance().db_api().exec(\"get_accounts\", [[id]]).then(e => {\n\t\t\tnames[id] = e[0].name\n\t\t\treturn e[0].name\n\t\t})\n\t}\n}\n\nexport async function operationData(op, Apis) {\n\tlet type = op[0]\n\tlet operation = op[1]\n\tlet name1, name2, uid, uid2\n\tuid2 = false\n\n\tswitch (type) {\n\t\tcase 0:\n\t\t\tuid = operation.from\n\t\t\tuid2 = operation.to\n\t\t\tbreak\n\t\tcase 1:\n\t\t\tuid = operation.seller\n\t\t\tbreak\n\t\tcase 2:\n\t\t\tuid = operation.fee_paying_account\n\t\t\tbreak\n\t\tcase 3:\n\t\t\tuid = operation.funding_account\n\t\t\tbreak\n\t\tcase 4:\n\t\t\tuid = operation.account_id\n\t\t\tbreak\n\t\tcase 5:\n\t\t\tuid = operation.registrar\n\t\t\tuid2 = operation.referrer\n\t\t\tbreak\n\t\tcase 6:\n\t\t\tuid = operation.account\n\t\t\tbreak\n\t\tcase 14:\n\t\t\tuid = operation.issuer\n\t\t\tuid2 = operation.issue_to_account\n\t\t\tbreak\n\t\tcase 15:\n\t\t\tuid = operation.payer\n\t\t\tbreak\n\t\tcase 19:\n\t\t\tuid = operation.publisher\n\t\t\tbreak\n\t\tcase 22:\n\t\t\tuid = operation.fee_paying_account\n\t\t\tbreak\n\t\tcase 23:\n\t\t\tuid = operation.fee_paying_account\n\t\t\tbreak\n\t\tcase 33:\n\t\t\tuid = operation.owner_\n\t\t\tbreak\n\t\tcase 37:\n\t\t\tuid = operation.deposit_to_account\n\t\t\tbreak\n\t\tcase 49:\n\t\t\tuid = operation.account_id\n\t\t\tbreak\n\t\tcase 50:\n\t\t\tuid = operation.account_id\n\t\t\tbreak\n\n\t\tdefault:\n\t\t\tthrow op\n\t}\n\n\tif (uid) {\n\t\tname1 = await getName(uid, Apis)\n\t}\n\tif (uid2) {\n\t\tname2 = await getName(uid2, Apis)\n\t}\n\n\treturn { name1: name1, name2: name2, type: type, data: operation }\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"tables_table__1NkJO\",\"header\":\"tables_header___7bd5\",\"body\":\"tables_body__xBiMY\",\"footer\":\"tables_footer__19pKs\",\"prevButton\":\"tables_prevButton__t9HoX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"details\":\"Ledgers_details__30O2U\",\"content\":\"Ledgers_content__3uDCg\",\"item\":\"Ledgers_item__1qISp\",\"value\":\"Ledgers_value__DJET9\",\"main\":\"Ledgers_main__1MQYC\",\"history\":\"Ledgers_history__3Zk1D\",\"created\":\"Ledgers_created__37nGN\",\"sequence\":\"Ledgers_sequence__2IcJ2\",\"transactions\":\"Ledgers_transactions__2_tJy\",\"operations\":\"Ledgers_operations__A0BV6\",\"description\":\"Ledgers_description__2LKjI\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport classNames from 'classnames';\nimport { Button } from 'reactstrap';\n\nimport CONFIG from '@quanta/config';\nimport { timeDiff } from '@quanta/helpers/utils';\nimport tableClasses from '@quanta/styles/tables.scss';\nimport classes from './Ledgers.scss';\n\nclass Ledgers extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tledgersSource: new EventSource(\n\t\t\t\t`${CONFIG.ENVIRONMENT.HORIZON_SERVER}/ledgers?order=asc&cursor=now`\n\t\t\t),\n\t\t\tledgers: props.ledgers || [],\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tconst { fetchLedgers, fetchMetrics, fetchNodeCount, fetchAllLedgers } = this.props;\n\t\tfetchLedgers();\n\t\tfetchAllLedgers({ limit: 15, order: 'desc' });\n\t\tfetchNodeCount();\n\t\tfetchMetrics();\n\n\t\tthis.state.ledgersSource.addEventListener(['message'], message => {\n\t\t\tconst { ledgers } = this.state;\n\t\t\tif (this.state.ledgers.length > 0) {\n\t\t\t\tledgers.unshift(JSON.parse(message.data));\n\t\t\t\tthis.getBlockAverageLatency();\n\t\t\t\tfetchMetrics();\n\t\t\t\tthis.setState({\n\t\t\t\t\tledgers: ledgers.slice(0, CONFIG.SETTINGS.RECENT_ITEM_LENGTH),\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif (this.props.ledgers !== nextProps.ledgers) {\n\t\t\tthis.setState(\n\t\t\t\t{\n\t\t\t\t\tledgers: nextProps.ledgers.sort((a, b) =>\n\t\t\t\t\t\ttimeDiff(a.closed_at, 'ms', b.closed_at)\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\t() => {\n\t\t\t\t\tthis.getBlockAverageLatency();\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t}\n\n\tgetBlockAverageLatency = () => {\n\t\tconst { setAverageBlockLatency } = this.props;\n\t\tconst { ledgers } = this.state;\n\n\t\tlet totalLatency = 0;\n\t\tledgers.forEach((ledger, index) => {\n\t\t\tif (index === ledgers.length - 1) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\ttotalLatency += timeDiff(ledgers[index + 1].closed_at, 'ms', ledger.closed_at);\n\t\t});\n\t\tsetAverageBlockLatency(Math.round(totalLatency / (ledgers.length - 1)));\n\t};\n\n\tonNext = () => {\n\t\tconst { allLinks, fetchAllLedgers } = this.props;\n\t\tfetchAllLedgers({ url: allLinks.next.href });\n\t};\n\n\tonPrev = () => {\n\t\tconst { allLinks, fetchAllLedgers } = this.props;\n\t\tfetchAllLedgers({ url: allLinks.prev.href });\n\t};\n\n\trenderLedgersRecord = ledgers => {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t{ledgers.map(ledger => (\n\t\t\t\t\t<div key={ledger.id} className={tableClasses.body}>\n\t\t\t\t\t\t<a href={`/ledgers/${ledger.sequence}`} className={classes.sequence}>\n\t\t\t\t\t\t\t{ledger.sequence}\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<div className={classes.transactions}>{ledger.transaction_count}</div>\n\t\t\t\t\t\t<div className={classes.operations}>{ledger.operation_count}</div>\n\t\t\t\t\t\t<div className={classes.created}>{`< ${moment(ledger.closed_at).toNow(\n\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t)} ago`}</div>\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t</React.Fragment>\n\t\t);\n\t};\n\n\trenderLedgerHistory = () => (\n\t\t<div className=\"hidden\">\n\t\t\t<div className={classes.header}>\n\t\t\t\t<h2>Ledger History</h2>\n\t\t\t</div>\n\t\t\t<div className={tableClasses.table}>\n\t\t\t\t<div className={tableClasses.header}>\n\t\t\t\t\t<div className={classes.sequence}>Sequence</div>\n\t\t\t\t\t<div className={classes.transactions}>Transactions</div>\n\t\t\t\t\t<div className={classes.operations}>Operations</div>\n\t\t\t\t\t<div className={classes.created}>Created</div>\n\t\t\t\t</div>\n\t\t\t\t{this.renderLedgersRecord(this.state.ledgers)}\n\t\t\t</div>\n\t\t</div>\n\t);\n\n\trenderAllLedgers = () => {\n\t\tconst { allLedgers, allLinks } = this.props;\n\t\treturn (\n\t\t\t<div className={classes.history}>\n\t\t\t\t<h2>Ledger History</h2>\n\t\t\t\t<div className={tableClasses.table}>\n\t\t\t\t\t<div className={tableClasses.header}>\n\t\t\t\t\t\t<div className={classes.sequence}>Sequence</div>\n\t\t\t\t\t\t<div className={classes.transactions}>Transactions</div>\n\t\t\t\t\t\t<div className={classes.operations}>Operations</div>\n\t\t\t\t\t\t<div className={classes.created}>Created</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t{this.renderLedgersRecord(allLedgers)}\n\t\t\t\t</div>\n\t\t\t\t<div className={tableClasses.footer}>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tclassName={classNames(tableClasses.prevButton, 'hidden-sm')}\n\t\t\t\t\t\tonClick={this.onPrev}\n\t\t\t\t\t\tdisabled={!allLinks.prev}\n\t\t\t\t\t>\n\t\t\t\t\t\tPrev\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tclassName={classNames(tableClasses.prevButton, 'show-sm')}\n\t\t\t\t\t\tonClick={this.onPrev}\n\t\t\t\t\t\tdisabled={!allLinks.prev}\n\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t>\n\t\t\t\t\t\tPrev\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tclassName=\"hidden-sm\"\n\t\t\t\t\t\tonClick={this.onNext}\n\t\t\t\t\t\tdisabled={!allLinks.next}\n\t\t\t\t\t>\n\t\t\t\t\t\tNext\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tclassName=\"show-sm\"\n\t\t\t\t\t\tonClick={this.onNext}\n\t\t\t\t\t\tdisabled={!allLinks.next}\n\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t>\n\t\t\t\t\t\tNext\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t};\n\n\trender() {\n\t\tconst { metrics, averageBlockLatency, nodeCount } = this.props;\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<div className={classes.details}>\n\t\t\t\t\t<div className={classes.content}>\n\t\t\t\t\t\t<div className={classes.item}>\n\t\t\t\t\t\t\tHighest Block\n\t\t\t\t\t\t\t{metrics['history.latest_ledger'] && (\n\t\t\t\t\t\t\t\t<div className={classes.value}>\n\t\t\t\t\t\t\t\t\t{metrics['history.latest_ledger'].value}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={classes.item}>\n\t\t\t\t\t\t\tAverage Block Latency\n\t\t\t\t\t\t\t<div className={classes.value}>{`${averageBlockLatency}ms`}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={classes.item}>\n\t\t\t\t\t\t\tNumber of Nodes\n\t\t\t\t\t\t\t<div className={classes.value}>{nodeCount}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className={classes.main}>\n\t\t\t\t\t{this.renderAllLedgers()}\n\t\t\t\t\t{this.renderLedgerHistory()}\n\t\t\t\t</div>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nconst { func, arrayOf, object, shape, number } = PropTypes;\nLedgers.propTypes = {\n\tfetchLedgers: func.isRequired,\n\tfetchAllLedgers: func.isRequired,\n\tfetchMetrics: func.isRequired,\n\tsetAverageBlockLatency: func.isRequired,\n\tfetchNodeCount: func.isRequired,\n\tledgers: arrayOf(object).isRequired,\n\tallLedgers: arrayOf(object).isRequired,\n\tallLinks: shape({}).isRequired,\n\tmetrics: shape({}).isRequired,\n\taverageBlockLatency: number.isRequired,\n\tnodeCount: number.isRequired,\n};\nexport default Ledgers;\n","import { connect } from 'react-redux';\nimport { fetchLedgers, fetchAllLedgers } from '@quanta/redux/actions/ledgers';\nimport { fetchMetrics } from '@quanta/redux/actions/metrics';\nimport { setAverageBlockLatency, fetchNodeCount } from '@quanta/redux/actions/global';\nimport { SETTINGS } from '@quanta/config';\nimport Ledgers from '@quanta/components/pages/Ledgers';\n\nconst mapStateToProps = state => ({\n\tledgers: state.ledgers.ledgers,\n\tallLedgers: state.ledgers.allLedgers.ledgers,\n\tallLinks: state.ledgers.allLedgers.links,\n\tmetrics: state.metrics.metrics,\n\taverageBlockLatency: state.global.averageBlockLatency,\n\tnodeCount: state.global.nodeCount,\n});\n\nconst mapActionCreators = dispatch => ({\n\tfetchLedgers: () => {\n\t\tdispatch(fetchLedgers({ limit: SETTINGS.RECENT_ITEM_LENGTH, order: 'desc' }));\n\t},\n\tfetchAllLedgers: params => {\n\t\tdispatch(fetchAllLedgers(params));\n\t},\n\tfetchMetrics: () => {\n\t\tdispatch(fetchMetrics());\n\t},\n\tsetAverageBlockLatency: averageBlockLatency => {\n\t\tdispatch(setAverageBlockLatency(averageBlockLatency));\n\t},\n\tfetchNodeCount: () => {\n\t\tdispatch(fetchNodeCount());\n\t},\n});\n\nexport default connect(\n\tmapStateToProps,\n\tmapActionCreators\n)(Ledgers);\n"],"sourceRoot":""}